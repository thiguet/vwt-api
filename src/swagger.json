{
  "openapi": "3.0.3",
  "info": {
    "title": "Api documentation",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/facebook": {
      "get": {
        "operationId": "loginControllerLoginFacebook",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Auth Ok!"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Log in in VWT using a Facebook account",
        "summary": "Log in in VWT using a Facebook account",
        "tags": [
          "LoginController"
        ]
      }
    },
    "/auth/facebook/callback": {
      "get": {
        "operationId": "loginControllerCallbackFacebook",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Auth Ok!"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Callback to return a User for the app",
        "summary": "Callback to return a User for the VWT using a Facebook account",
        "tags": [
          "LoginController"
        ]
      }
    },
    "/auth/google": {
      "get": {
        "operationId": "loginControllerLoginGoogle",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Auth Ok!"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Log in in VWT using a Google account",
        "summary": "Log in in VWT using a Google account",
        "tags": [
          "LoginController"
        ]
      }
    },
    "/auth/google/callback": {
      "get": {
        "operationId": "loginControllerCallbackGoogle",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Auth Ok!"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Callback to return a User for the VWT using a Google account",
        "summary": "Callback to return a User for the VWT using a Google account",
        "tags": [
          "LoginController"
        ]
      }
    },
    "/auth/github": {
      "get": {
        "operationId": "loginControllerLoginGithub",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Auth Ok!"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Log in in VWT using a Github account",
        "summary": "Log in in VWT using a Github account",
        "tags": [
          "LoginController"
        ]
      }
    },
    "/auth/github/callback": {
      "get": {
        "operationId": "loginControllerCallbackGithub",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Auth Ok!"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Callback to return a User for the VWT using a Github account",
        "summary": "Callback to return a User for the VWT using a Github account",
        "tags": [
          "LoginController"
        ]
      }
    },
    "/products": {
      "get": {
        "operationId": "productsControllerFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Products"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Returns all the products",
        "summary": "Gets all products",
        "tags": [
          "ProductsController"
        ]
      },
      "post": {
        "operationId": "productsControllerNewProduct",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "One Product"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Saves and returns one product with the id property setted",
        "summary": "Add one product",
        "tags": [
          "ProductsController"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "productsControllerFindByPk",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "One Product"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Returns one product by id via GET params",
        "summary": "Gets one product",
        "tags": [
          "ProductsController"
        ]
      },
      "put": {
        "operationId": "productsControllerUpdateProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "One Product"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Saves and returns the product updating old properties",
        "summary": "Update one product",
        "tags": [
          "ProductsController"
        ]
      },
      "delete": {
        "operationId": "productsControllerDeleteProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "One Product"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Delete the product from the database",
        "summary": "Deletes one product",
        "tags": [
          "ProductsController"
        ]
      }
    },
    "/reports/measures": {
      "get": {
        "operationId": "productsControllerFindMeasuresReport",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Measures Report Data"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Gets the measures report data",
        "summary": "Gets the measure report data",
        "tags": [
          "ProductsController"
        ]
      }
    },
    "/reports/quantity": {
      "get": {
        "operationId": "productsControllerFindQuantityReport",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Quantity Report Data"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Gets the measures report data",
        "summary": "Gets the quantity report data",
        "tags": [
          "ProductsController"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "usersControllerFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "All Users"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Returns all saved users",
        "summary": "Returns all saved users",
        "tags": [
          "UsersController"
        ]
      }
    },
    "/user/login": {
      "post": {
        "operationId": "usersControllerLogin",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Auth Ok!"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not found"
          }
        },
        "description": "Log the user using a JWT",
        "summary": "Log in using JWT",
        "tags": [
          "UsersController"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "LoginController"
    },
    {
      "name": "ProductsController"
    },
    {
      "name": "UsersController"
    }
  ],
  "components": {
    "schemas": {
      "NotFound": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The error name",
            "example": "NOT_FOUND",
            "default": "NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "An error message"
          },
          "status": {
            "type": "number",
            "description": "The status code of the exception",
            "example": 404,
            "default": 404
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericError"
            },
            "description": "A list of related errors"
          },
          "stack": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The stack trace (only in development mode)"
          }
        },
        "required": [
          "name",
          "message",
          "status"
        ]
      },
      "GenericError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The error name"
          },
          "message": {
            "type": "string",
            "description": "An error message"
          }
        },
        "additionalProperties": true,
        "required": [
          "name",
          "message"
        ]
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The error name",
            "example": "UNAUTHORIZED",
            "default": "UNAUTHORIZED"
          },
          "message": {
            "type": "string",
            "description": "An error message"
          },
          "status": {
            "type": "number",
            "description": "The status code of the exception",
            "example": 401,
            "default": 401
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericError"
            },
            "description": "A list of related errors"
          },
          "stack": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The stack trace (only in development mode)"
          }
        },
        "required": [
          "name",
          "message",
          "status"
        ]
      }
    }
  }
}